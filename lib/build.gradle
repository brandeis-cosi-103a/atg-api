plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id "com.vanniktech.maven.publish" version "0.29.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

mavenPublishing {
  configure(new JavaLibrary(new JavadocJar.Javadoc(), true))
  //publishToMavenCentral(SonatypeHost.DEFAULT)
  publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

  signAllPublications()

  coordinates("io.github.brandeis-cosi-103a", "atg-api", project.property('version'))

  pom {
    name = "Automation: The Game API"
    description = "API for Automation: The Game"
    inceptionYear = "2024"
    url = "https://github.com/brandeis-cosi-103a/atg-api/"
    licenses {
        license {
            name = 'MIT'
            url = 'https://spdx.org/licenses/MIT.html'
        }
    }
    developers {
      developer {
        id = "jdelfino"
        name = "Joe Delfino"
        url = "https://github.com/jdelfino/"
      }
    }
    scm {
        connection = 'scm:git:https://github.com/brandeis-cosi-103a/atg-api.git'
        developerConnection = 'scm:git:ssh://github.com/brandeis-cosi-103a/atg-api.git'
        url = 'http://github.com/brandeis-cosi-103a/atg-api'
    }
  }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    api libs.guava
    implementation platform('com.fasterxml.jackson:jackson-bom:2.18.2')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
